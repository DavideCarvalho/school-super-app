// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model School {
  id          String       @id @default(cuid())
  name        String
  slug        String
  Users       User[]
  SchoolYears SchoolYear[]
  Teachers    Teacher[]
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  schoolId  String
  roleId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  School School @relation(fields: [schoolId], references: [id])
  Role   Role   @relation(fields: [roleId], references: [id])
}

model Teacher {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  schoolId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  School            School            @relation(fields: [schoolId], references: [id])
  TeacherHasClasses TeacherHasClass[]
}

model TeacherHasClass {
  id        String   @id @default(cuid())
  teacherId String
  classId   String
  subjectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Teacher Teacher @relation(fields: [teacherId], references: [id])
  Class   Class   @relation(fields: [classId], references: [id])
  Subject Subject @relation(fields: [subjectId], references: [id])
}

model Subject {
  id              String            @id @default(cuid())
  name            String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  TeacherHasClass TeacherHasClass[]
}

model File {
  id           String   @id @default(cuid())
  name         String
  path         String
  classId      String
  status       String
  frontAndBack Boolean  @default(false)
  quantity     Int      @default(1)
  dueDate      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  Class Class @relation(fields: [classId], references: [id])
}

model Role {
  id    String @id @default(cuid())
  name  String
  Users User[]
}

model SchoolYear {
  id        String   @id @default(cuid())
  name      String
  schoolId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  School  School  @relation(fields: [schoolId], references: [id])
  Classes Class[]
}

model Class {
  id           String   @id @default(cuid())
  name         String
  schoolYearId String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  SchoolYear      SchoolYear        @relation(fields: [schoolYearId], references: [id])
  File            File[]
  TeacherHasClass TeacherHasClass[]
}
